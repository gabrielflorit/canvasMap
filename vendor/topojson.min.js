topojson=function(){function v(d,h){function k(a){a=d.arcs[a];var b=a[0],c=[0,0];a.forEach(function(a){c[0]+=a[0];c[1]+=a[1]});return[b,c]}var e={},c={};h.forEach(function(a){var b=k(a),f=b[0],d=b[1];(b=c[f])?(delete c[b.end],b.push(a),b.end=d,(a=e[d])?(delete e[a.start],f=a===b?b:b.concat(a),e[f.start=b.start]=c[f.end=a.end]=f):(a=c[d])?(delete e[a.start],delete c[a.end],f=b.concat(a.map(function(a){return~a}).reverse()),e[f.start=b.start]=c[f.end=a.start]=f):e[b.start]=c[b.end]=b):(b=e[d])?(delete e[b.start],
b.unshift(a),b.start=f,(a=c[f])?(delete c[a.end],f=a===b?b:a.concat(b),e[f.start=a.start]=c[f.end=b.end]=f):(a=e[f])?(delete e[a.start],delete c[a.end],f=a.map(function(a){return~a}).reverse().concat(b),e[f.start=a.end]=c[f.end=b.end]=f):e[b.start]=c[b.end]=b):(b=e[f])?(delete e[b.start],b.unshift(~a),b.start=d,(a=c[d])?(delete c[a.end],f=a===b?b:a.concat(b),e[f.start=a.start]=c[f.end=b.end]=f):(a=e[d])?(delete e[a.start],delete c[a.end],f=a.map(function(a){return~a}).reverse().concat(b),e[f.start=
a.end]=c[f.end=b.end]=f):e[b.start]=c[b.end]=b):(b=c[d])?(delete c[b.end],b.push(~a),b.end=f,(a=c[f])?(delete e[a.start],f=a===b?b:b.concat(a),e[f.start=b.start]=c[f.end=a.end]=f):(a=e[f])?(delete e[a.start],delete c[a.end],f=b.concat(a.map(function(a){return~a}).reverse()),e[f.start=b.start]=c[f.end=a.start]=f):e[b.start]=c[b.end]=b):(b=[a],e[b.start=f]=c[b.end=d]=b)});var g=[],l;for(l in c)g.push(c[l]);return g}function r(d,h){var k={type:"Feature",id:h.id,properties:h.properties||{},geometry:s(d,
h)};null==h.id&&delete k.id;return k}function s(d,h){function k(a){a=a.slice();a[0]=a[0]*b+p;a[1]=a[1]*f+n;return a}function e(a){for(var c=[],d=0,e=a.length;d<e;++d){var g=a[d],l=c;l.length&&l.pop();for(var h=q[0>g?~g:g],m=0,k=h.length,r=0,s=0,t=void 0;m<k;++m)l.push(t=h[m].slice()),t[0]=(r+=t[0])*b+p,t[1]=(s+=t[1])*f+n;if(0>g)for(g=l,l=void 0,h=g.length,k=h-k;k<--h;)l=g[k],g[k++]=g[h],g[h]=l}2>c.length&&c.push(c[0].slice());return c}function c(a){for(a=e(a);4>a.length;)a.push(a[0].slice());return a}
function g(a){return a.map(c)}function l(a){var b=a.type;return"GeometryCollection"===b?{type:b,geometries:a.geometries.map(l)}:b in m?{type:b,coordinates:m[b](a)}:null}var a=d.transform,b=a.scale[0],f=a.scale[1],p=a.translate[0],n=a.translate[1],q=d.arcs,m={Point:function(a){return k(a.coordinates)},MultiPoint:function(a){return a.coordinates.map(k)},LineString:function(a){return e(a.arcs)},MultiLineString:function(a){return a.arcs.map(e)},Polygon:function(a){return g(a.arcs)},MultiPolygon:function(a){return a.arcs.map(g)}};
return l(h)}function u(d,h){for(var k=0,e=d.length;k<e;){var c=k+e>>>1;d[c]<h?k=c+1:e=c}return k}function w(d){return Math.abs((d[0][0]-d[2][0])*(d[1][1]-d[0][1])-(d[0][0]-d[1][0])*(d[2][1]-d[0][1]))}function x(d,h){return d[1][2]-h[1][2]}function y(d){function h(g){for(var e=c[g];0<g;){var a=(g+1>>1)-1,b=c[a];if(0<=d(e,b))break;c[b.index=g]=b;c[e.index=g=a]=e}}function k(g){for(var e=c[g];;){var a=g+1<<1,b=a-1,f=g,h=c[f];b<c.length&&0>d(c[b],h)&&(h=c[f=b]);a<c.length&&0>d(c[a],h)&&(h=c[f=a]);if(f===
g)break;c[h.index=g]=h;c[e.index=g=f]=e}}var e={},c=[];e.push=function(){for(var d=0,e=arguments.length;d<e;++d){var a=arguments[d];h(a.index=c.push(a)-1)}return c.length};e.pop=function(){var d=c[0],e=c.pop();c.length&&(c[e.index=0]=e,k(0));return d};e.remove=function(e){var l=e.index,a=c.pop();l!==c.length&&(c[a.index=l]=a,(0>d(a,e)?h:k)(l));return l};return e}function z(d){var h=0,k=0,e=d.scale[0],c=d.scale[1],g=d.translate[0],l=d.translate[1];return function(a){a[0]=(h+=a[0])*e+g;a[1]=(k+=a[1])*
c+l}}function A(d){var h=0,k=0,e=d.scale[0],c=d.scale[1],g=d.translate[0],l=d.translate[1];return function(a){var b=(a[0]-g)/e|0,d=(a[1]-l)/c|0;a[0]=b-h;a[1]=d-k;h=b;k=d}}return{version:"1.3.0",mesh:function(d,h,k){var e=[];if(1<arguments.length){var c=[],g,l=function(a){0>a&&(a=~a);(c[a]||(c[a]=[])).push(g)},a=function(a){a.forEach(l)},b=function(b){b.forEach(a)},f=function(a){"GeometryCollection"===a.type?a.geometries.forEach(f):a.type in p&&(g=a,p[a.type](a.arcs))},p={LineString:a,MultiLineString:b,
Polygon:b,MultiPolygon:function(a){a.forEach(b)}};f(h);c.forEach(3>arguments.length?function(a,b){e.push(b)}:function(a,b){k(a[0],a[a.length-1])&&e.push(b)})}else for(var n=0,q=d.arcs.length;n<q;++n)e.push(n);return s(d,{type:"MultiLineString",arcs:v(d,e)})},feature:function(d,h){return"GeometryCollection"===h.type?{type:"FeatureCollection",features:h.geometries.map(function(h){return r(d,h)})}:r(d,h)},neighbors:function(d){function h(a,b){a.forEach(function(a){0>a&&(a=~a);var d=c[a];d?d.push(b):
c[a]=[b]})}function k(a,b){a.forEach(function(a){h(a,b)})}function e(a,b){if("GeometryCollection"===a.type)a.geometries.forEach(function(a){e(a,b)});else if(a.type in l)l[a.type](a.arcs,b)}var c={},g=d.map(function(){return[]}),l={LineString:h,MultiLineString:k,Polygon:k,MultiPolygon:function(a,b){a.forEach(function(a){k(a,b)})}};d.forEach(e);for(var a in c){d=c[a];for(var b=d.length,f=0;f<b;++f)for(var p=f+1;p<b;++p){var n=d[f],q=d[p],m;(m=g[n])[a=u(m,q)]!==q&&m.splice(a,0,q);(m=g[q])[a=u(m,n)]!==
n&&m.splice(a,0,n)}}return g},presimplify:function(d,h){function k(a){e.remove(a);a[1][2]=h(a);e.push(a)}var e=y(x),c=0,g;h||(h=w);for(d.arcs.forEach(function(a){var c=[];a.forEach(z(d.transform));for(var k=1,l=a.length-1;k<l;++k)g=a.slice(k-1,k+2),g[1][2]=h(g),c.push(g),e.push(g);a[0][2]=a[l][2]=Infinity;k=0;for(l=c.length;k<l;++k)g=c[k],g.previous=c[k-1],g.next=c[k+1]});g=e.pop();){var l=g.previous,a=g.next;g[1][2]<c?g[1][2]=c:c=g[1][2];l&&(l.next=a,l[2]=g[2],k(l));a&&(a.previous=l,a[0]=g[0],k(a))}d.arcs.forEach(function(a){a.forEach(A(d.transform))});
return d}}}();